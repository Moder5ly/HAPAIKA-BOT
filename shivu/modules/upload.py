import urllib.request
from pymongo import ReturnDocument

from telegram import Update
from telegram.ext import CommandHandler, CallbackContext

from shivu import application, sudo_users, collection, db, CHARA_CHANNEL_ID, SUPPORT_CHAT

WRONG_FORMAT_TEXT = """‚ùåÔ∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç! 
–§–æ—Ä–º–∞—Ç: /upload –ø–æ—Å–∏–ª–∞–Ω–Ω—è_–Ω–∞_–∫–∞—Ä—Ç–∏–Ω–∫—É —ñ–º'—è-–Ω—è—à–∫–∏ –Ω–∞–∑–≤–∞-–∞–Ω—ñ–º–µ —Ä—ñ–¥–∫—ñ—Å—Ç—å

–Ü–º'—è –Ω—è—à—ñ —Ç–∞ –Ω–∞–∑–≤—É –∞–Ω—ñ–º–µ –ø–∏—Å–∞—Ç–∏ —á–µ—Ä–µ–∑ –¥–µ—Ñ—ñ—Å. –†—ñ–¥–∫—ñ—Å—Ç—å –≤–∫–∞–∑—É–≤–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—é —Ü–∏—Ñ—Ä–æ—é:

1 (‚ö™Ô∏è –ó–≤–∏—á–∞–π–Ω–∞)
2 (üü£ –†—ñ–¥–∫—ñ—Å–Ω–∞)
3 (üü° –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞)
4 (üî¥ –ú—ñ—Ñ—ñ—á–Ω–∞)"""



async def get_next_sequence_number(sequence_name):
    sequence_collection = db.sequences
    sequence_document = await sequence_collection.find_one_and_update(
        {'_id': sequence_name}, 
        {'$inc': {'sequence_value': 1}}, 
        return_document=ReturnDocument.AFTER
    )
    if not sequence_document:
        await sequence_collection.insert_one({'_id': sequence_name, 'sequence_value': 0})
        return 0
    return sequence_document['sequence_value']

async def upload(update: Update, context: CallbackContext) -> None:
    if str(update.effective_user.id) not in sudo_users:
        await update.message.reply_text('‚ö†Ô∏è –ó–∞–ø–∏—Ç–∞–π —É –≤–ª–∞—Å–Ω–∏–∫–∞.')
        return

    try:
        args = context.args
        if len(args) != 4:
            await update.message.reply_text(WRONG_FORMAT_TEXT)
            return

        character_name = args[1].replace('-', ' ').title()
        anime = args[2].replace('-', ' ').title()

        try:
            urllib.request.urlopen(args[0])
        except:
            await update.message.reply_text('‚ùåÔ∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.')
            return

        rarity_map = {1: "‚ö™Ô∏è –ó–≤–∏—á–∞–π–Ω–∞", 2: "üü£ –†—ñ–¥–∫—ñ—Å–Ω–∞", 3: "üü° –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞", 4: "üî¥ –ú—ñ—Ñ—ñ—á–Ω–∞"}
        try:
            rarity = rarity_map[int(args[3])]
        except KeyError:
            await update.message.reply_text('‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ —Ä—ñ–¥–∫—ñ—Å—Ç—å. –û–±–µ—Ä—ñ—Ç—å 1, 2, 3 –∞–±–æ 4 —Ä—ñ–¥–∫—ñ—Å—Ç—å.')
            return

        id = str(await get_next_sequence_number('character_id')).zfill(2)

        character = {
            'img_url': args[0],
            'name': character_name,
            'anime': anime,
            'rarity': rarity,
            'id': id
        }

        try:
            message = await context.bot.send_photo(
                chat_id=CHARA_CHANNEL_ID,
                photo=args[0],
                caption=f"<b>–Ü–º'—è –Ω—è—à–∫–∏:</b> {character_name}\n<b>–¢–∞–π—Ç–ª:</b> {anime}\n<b>–†—ñ–¥–∫—ñ—Å—Ç—å:</b> {rarity}\n<b>ID:</b> {id}\n–î–æ–¥–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º <a href='tg://user?id={update.effective_user.id}'>{update.effective_user.first_name}</a>",
                parse_mode='HTML'
            )
            character['message_id'] = message.message_id
            await collection.insert_one(character)
            await update.message.reply_text('‚úÖ –ù—è—à–∫—É –¥–æ–¥–∞–Ω–æ!')
        except:
            await collection.insert_one(character)
            update.effective_message.reply_text("‚ö†Ô∏è –ù—è—à–∫—É –¥–æ–¥–∞–Ω–æ, –æ–¥–Ω–∞–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.")
        
    except Exception as e:
        await update.message.reply_text(f'‚ùåÔ∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –Ω—è—à–∫—É. –ü–æ–º–∏–ª–∫–∞: {str(e)}\n–Ø–∫—â–æ –≤–∏ –¥—É–º–∞—î—Ç–µ, —â–æ –ø–æ–º–∏–ª–∫–∞ –≤ –∫–æ–¥—ñ, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ: {SUPPORT_CHAT}')

async def delete(update: Update, context: CallbackContext) -> None:
    if str(update.effective_user.id) not in sudo_users:
        await update.message.reply_text('‚ö†Ô∏è –ü–æ–ø—Ä–æ—Å—ñ—Ç—å –≤–ª–∞—Å–Ω–∏–∫–∞ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è —Ü—ñ—î—é –∫–æ–º–∞–Ω–¥–æ—é.')
        return

    try:
        args = context.args
        if len(args) != 1:
            await update.message.reply_text('‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç! –§–æ—Ä–º–∞—Ç: /delete ID')
            return

        
        character = await collection.find_one_and_delete({'id': args[0]})

        if character:
            
            await context.bot.delete_message(chat_id=CHARA_CHANNEL_ID, message_id=character['message_id'])
            await update.message.reply_text('‚úÖ –ì–û–¢–û–í–û')
        else:
            await update.message.reply_text('‚úÖ –ù—è—à–∫—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö, –∞–ª–µ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª—ñ.')
    except Exception as e:
        await update.message.reply_text(f'{str(e)}')

async def update(update: Update, context: CallbackContext) -> None:
    if str(update.effective_user.id) not in sudo_users:
        await update.message.reply_text('‚ö†Ô∏è –í–∞–º –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —Ü—ñ—î—é –∫–æ–º–∞–Ω–¥–æ—é.')
        return

    try:
        args = context.args
        if len(args) != 3:
            await update.message.reply_text('‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç! –§–æ—Ä–º–∞—Ç: /update id –ø–æ–ª–µ –Ω–æ–≤–µ_–∑–Ω–∞—á–µ–Ω–Ω—è')
            return

        # Get character by ID
        character = await collection.find_one({'id': args[0]})
        if not character:
            await update.message.reply_text('‚ùåÔ∏è –ù—è—à–∫—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.')
            return

        # Check if field is valid
        valid_fields = ['img_url', 'name', 'anime', 'rarity']
        if args[1] not in valid_fields:
            await update.message.reply_text(f'‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–Ω–µ –ø–æ–ª–µ. –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –æ–¥–Ω–µ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö: {", ".join(valid_fields)}.')
            return

        # Update field
        if args[1] in ['name', 'anime']:
            new_value = args[2].replace('-', ' ').title()
        elif args[1] == 'rarity':
            rarity_map = {1: "‚ö™Ô∏è –ó–≤–∏—á–∞–π–Ω–∞", 2: "üü£ –†—ñ–¥–∫—ñ—Å–Ω–∞", 3: "üü° –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞", 4: "üî¥ –ú—ñ—Ñ—ñ—á–Ω–∞", 5: "üíÆ –û—Å–æ–±–ª–∏–≤–∞"}
            try:
                new_value = rarity_map[int(args[2])]
            except KeyError:
                await update.message.reply_text('‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ —Ä—ñ–¥–∫—ñ—Å—Ç—å. –û–±–µ—Ä—ñ—Ç—å 1, 2, 3, 4 –∞–±–æ 5 —Ä—ñ–¥–∫—ñ—Å—Ç—å.')
                return
        else:
            new_value = args[2]

        await collection.find_one_and_update({'id': args[0]}, {'$set': {args[1]: new_value}})

        
        if args[1] == 'img_url':
            await context.bot.delete_message(chat_id=CHARA_CHANNEL_ID, message_id=character['message_id'])
            message = await context.bot.send_photo(
                chat_id=CHARA_CHANNEL_ID,
                photo=new_value,
                caption=f"<b>–Ü–º'—è –Ω—è—à–∫–∏:</b> {character['name']}\n<b>–¢–∞–π—Ç–ª:</b> {character['anime']}\n<b>–†—ñ–¥–∫—ñ—Å—Ç—å:</b> {character['rarity']}\n<b>ID:</b> {character['id']}\n–û–Ω–æ–≤–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º <a href='tg://user?id={update.effective_user.id}'>{update.effective_user.first_name}</a>",
                parse_mode='HTML'
            )
            character['message_id'] = message.message_id
            await collection.find_one_and_update({'id': args[0]}, {'$set': {'message_id': message.message_id}})
        else:
            
            await context.bot.edit_message_caption(
                chat_id=CHARA_CHANNEL_ID,
                message_id=character['message_id'],
                caption=f"<b>–Ü–º'—è –Ω—è—à–∫–∏:</b> {character['name']}\n<b>–¢–∞–π—Ç–ª:</b> {character['anime']}\n<b>–†—ñ–¥–∫—ñ—Å—Ç—å:</b> {character['rarity']}\n<b>ID:</b> {character['id']}\n–û–Ω–æ–≤–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º <a href='tg://user?id={update.effective_user.id}'>{update.effective_user.first_name}</a>",
                parse_mode='HTML'
            )

        await update.message.reply_text('‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö. –û–¥–Ω–∞–∫ —ñ–Ω–æ–¥—ñ –ø–æ—Ç—Ä—ñ–±–µ–Ω —á–∞—Å, —â–æ–±–∏ –æ–Ω–æ–≤–∏—Ç–∏ –æ–ø–∏—Å —É –≤–∞—à–æ–º—É —á–∞—Ç—ñ, —Ç–æ–º—É –∑–∞—á–µ–∫–∞–π—Ç–µ.')
    except Exception as e:
        await update.message.reply_text(f'‚ùåÔ∏è –°—Ö–æ–∂–µ, –±–æ—Ç–∞ –Ω–µ –¥–æ–¥–∞–Ω–æ –¥–æ —á–∞—Ç—É, –∞–±–æ —Ç–∞–∫–æ—ó –Ω—è—à–∫–∏ –Ω–µ —ñ—Å–Ω—É—î, –∞–±–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π id –Ω—è—à–∫–∏.')

UPLOAD_HANDLER = CommandHandler('upload', upload, block=False)
application.add_handler(UPLOAD_HANDLER)
DELETE_HANDLER = CommandHandler('delete', delete, block=False)
application.add_handler(DELETE_HANDLER)
UPDATE_HANDLER = CommandHandler('update', update, block=False)
application.add_handler(UPDATE_HANDLER)

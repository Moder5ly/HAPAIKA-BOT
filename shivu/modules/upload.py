import urllib.request
from pymongo import ReturnDocument

from telegram import Update
from telegram.ext import CommandHandler, CallbackContext

from shivu import application, sudo_users, collection, db, CHARA_CHANNEL_ID, SUPPORT_CHAT

WRONG_FORMAT_TEXT = "‚ùåÔ∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç!\n–§–æ—Ä–º–∞—Ç: <code>/upload</code> <i>–ø–æ—Å–∏–ª–∞–Ω–Ω—è_–Ω–∞_–∫–∞—Ä—Ç–∏–Ω–∫—É —ñ–º'—è-–Ω—è—à–∫–∏ –Ω–∞–∑–≤–∞-–∞–Ω—ñ–º–µ –ø–æ–¥—ñ—è —Ç—Ä–∞–Ω—Å–ª—ñ—Ç-—ñ–º–µ–Ω—ñ</i>\n\n–Ü–º'—è –Ω—è—à—ñ, –Ω–∞–∑–≤—É –∞–Ω—ñ–º–µ —Ç–∞ —Ç—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—é –ø–∏—Å–∞—Ç–∏ —á–µ—Ä–µ–∑ –¥–µ—Ñ—ñ—Å, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥:\n<code>/upload</code> <i>–ø–æ—Å–∏–ª–∞–Ω–Ω—è-–Ω–∞-–∫–∞—Ä—Ç–∏–Ω–∫—É –º–∞—Ö—ñ—Ä–æ-–æ—è–º–∞ –º—ñ–π-–±—Ä–∞—Ç–∏–∫-–≤–∂–µ-–Ω–µ-–±—Ä–∞—Ç–∏–∫! 8 mahiro-oyama</i>\n\n–ü–æ–¥—ñ—è –≤–∫–∞–∑—É—î—Ç—å—Å—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º —á–∏—Å–ª–æ–º. –¢—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—é —ñ–º–µ–Ω—ñ –≤–∫–∞–∑—É–≤–∞—Ç–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é."

async def get_next_sequence_number(sequence_name):
    sequence_collection = db.sequences
    sequence_document = await sequence_collection.find_one_and_update(
        {'_id': sequence_name}, 
        {'$inc': {'sequence_value': 1}}, 
        return_document=ReturnDocument.AFTER
    )
    if not sequence_document:
        await sequence_collection.insert_one({'_id': sequence_name, 'sequence_value': 0})
        return 0
    return sequence_document['sequence_value']

# –ö–æ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω—è—à–æ–∫ —É –±–æ—Ç–∞
async def upload(update: Update, context: CallbackContext) -> None:
    if str(update.effective_user.id) not in sudo_users:
        await update.message.reply_text(f"‚ö†Ô∏è –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –æ–¥–Ω–æ–≥–æ –∑ –∞–¥–º—ñ–Ω—ñ–≤ –±–æ—Ç–∞ —É {SUPPORT_CHAT}, —â–æ–±–∏ –¥–æ–¥–∞—Ç–∏ —Ü—é –∫–∞—Ä—Ç–∏–Ω–∫—É.")
        return
    try:
        args = context.args
        if len(args) != 5:
            await update.message.reply_text(WRONG_FORMAT_TEXT, parse_mode = 'HTML')
            return

        character_name = args[1].replace('-', ' ').title()
        anime = args[2].replace('-', ' ').title()
        character_name_translit = args[4].replace('-', ' ').title()

        try:
            urllib.request.urlopen(args[0])
        except:
            await update.message.reply_text("‚ùåÔ∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è. –†–∞–¥–∏–º–æ —Å–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É –Ω–∞ Imgur —Ç–∞ –≤—Å—Ç–∞–≤–ª—è—Ç–∏ –ø—Ä—è–º–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑–≤—ñ–¥—Ç–∏.")
            return

#        rarity_map = {
#                     1: "‚ö™Ô∏è –ó–≤–∏—á–∞–π–Ω–∞", 
#                     2: "üü£ –†—ñ–¥–∫—ñ—Å–Ω–∞", 
#                     3: "üü° –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞", 
#                     4: "üî¥ –ú—ñ—Ñ—ñ—á–Ω–∞"
#                     }
#        try:
#            rarity = rarity_map[int(args[3])]
#        except KeyError:
#            await update.message.reply_text("""‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ —Ä—ñ–¥–∫—ñ—Å—Ç—å. –û–±–µ—Ä—ñ—Ç—å —Ä—ñ–¥–∫—ñ—Å—Ç—å –∑ –Ω–∏–∂—á–µ–Ω–∞–≤–µ–¥–µ–Ω–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤:
#                                                1 : ‚ö™Ô∏è –ó–≤–∏—á–∞–π–Ω–∞
#                                                2 : üü£ –†—ñ–¥–∫—ñ—Å–Ω–∞
#                                                3 : üü° –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞
#                                                4 : üî¥ –ú—ñ—Ñ—ñ—á–Ω–∞""")
#            return

        event_map =  {
                     1: "üêæ –¢–≤–∞—Ä–∏–Ω–æ–ø–æ–¥—ñ–±–Ω–∞", 
                     2: "üëò –°—Ö—ñ–¥–Ω–∞", 
                     3: "üéâ –ó–Ω–∞–º–µ–Ω–Ω–∞", 
                     4: "üê∞ –í–µ–ª–∏–∫–æ–¥–Ω—è",
                     5: "üßëüèª‚Äçü§ù‚Äçüßëüèª –ü–∞—Ä–Ω–∞",
                     6: "üåà –°—Ç–∞—Ç–µ–∑–º—ñ–Ω–Ω–∞",
                     7: "üèñÔ∏è –ü–ª—è–∂–Ω–∞",
                     8: "üßπ –ü–æ–∫–æ—ó–≤–∫–æ–≤–∞",
                     9: "üë©‚Äçüè´ –®–∫—ñ–ª—å–Ω–∞",
                     10: "üéÉ –ì–µ–ª–æ–≤—ñ–Ω—Å—å–∫–∞",
                     11: "üçî –ì–∞–º–±—É—Ä–≥–µ—Ä–Ω–∞",
                     12: "üéÑ –†—ñ–∑–¥–≤—è–Ω–∞",
                     13: "–ó–≤–∏—á–∞–π–Ω–∞"
                     }
        try:
            event = event_map[int(args[3])]
        except KeyError:
            await update.message.reply_text("""‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –ø–æ–¥—ñ—è. –í–∫–∞–∂—ñ—Ç—å –ø–æ–¥—ñ—é, –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –º—ñ—Å—è—Ü—è:
                                                1 (—Å—ñ—á–µ–Ω—å): üêæ –¢–≤–∞—Ä–∏–Ω–æ–ø–æ–¥—ñ–±–Ω–∞
                                                2 (–ª—é—Ç–∏–π): üëò –°—Ö—ñ–¥–Ω–∞
                                                3 (–±–µ—Ä–µ–∑–µ–Ω—å): üéâ –ó–Ω–∞–º–µ–Ω–Ω–∞
                                                4 (–∫–≤—ñ—Ç–µ–Ω—å): üê∞ –í–µ–ª–∏–∫–æ–¥–Ω—è
                                                5 (—Ç—Ä–∞–≤–µ–Ω—å): üßëüèª‚Äçü§ù‚Äçüßëüèª –ü–∞—Ä–Ω–∞
                                                6 (—á–µ—Ä–≤–µ–Ω—å): üåà –°—Ç–∞—Ç–µ–∑–º—ñ–Ω–Ω–∞
                                                7 (–ª–∏–ø–µ–Ω—å): üèñÔ∏è –ü–ª—è–∂–Ω–∞
                                                8 (—Å–µ—Ä–ø–µ–Ω—å): üßπ –ü–æ–∫–æ—ó–≤–∫–æ–≤–∞
                                                9 (–≤–µ—Ä–µ—Å–µ–Ω—å): üë©‚Äçüè´ –®–∫—ñ–ª—å–Ω–∞
                                                10 (–∂–æ–≤—Ç–µ–Ω—å): üéÉ –ì–µ–ª–æ–≤—ñ–Ω—Å—å–∫–∞
                                                11 (–ª–∏—Å—Ç–æ–ø–∞–¥): üçî –ì–∞–º–±—É—Ä–≥–µ—Ä–Ω–∞
                                                12 (–≥—Ä—É–¥–µ–Ω—å): üéÑ –†—ñ–∑–¥–≤—è–Ω–∞
                                                13 : –ó–≤–∏—á–∞–π–Ω–∞""")
            return

        id = str(await get_next_sequence_number('character_id')).zfill(2)

        character = {
            'img_url': args[0],
            'name': character_name,
            'name_translit': character_name_translit,
            'anime': anime,
#           'rarity': rarity,
            'event': event,
            'id': id
        }

        # –í–∏–≤–µ–¥–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª –•–∞–ø–∞–π–∫–∏
        try:
            message = await context.bot.send_photo(
                chat_id = CHARA_CHANNEL_ID,
                photo = args[0],
                caption = f"<b>–ù—è—à–∫–∞:</b> {character_name} - {id}\n<b>–¢—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—è —ñ–º–µ–Ω—ñ:</b> {character_name_translit}\n<b>–¢–∞–π—Ç–ª:</b> {anime}\n<b>–ü–æ–¥—ñ—è:</b> {event}\n\n–î–æ–¥–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º <a href='tg://user?id={update.effective_user.id}'>{update.effective_user.first_name}</a>",
                parse_mode = 'HTML'
            )
            character['message_id'] = message.message_id
            await collection.insert_one(character)
            await update.message.reply_text("‚úÖ –ù—è—à–∫—É —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!")
        except:
            await collection.insert_one(character)
            update.effective_message.reply_text("‚ö†Ô∏è –ù—è—à–∫—É –¥–æ–¥–∞–Ω–æ, –æ–¥–Ω–∞–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ Telegram-–∫–∞–Ω–∞–ª—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.")
        
    except Exception as e:
        await update.message.reply_text(f"‚ùåÔ∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –Ω—è—à–∫—É. –ü–æ–º–∏–ª–∫–∞: {str(e)}\n–Ø–∫—â–æ –≤–∏ –≤–≤–∞–∂–∞—î—Ç–µ, —â–æ –ø–æ–º–∏–ª–∫–∞ –≤ –∫–æ–¥—ñ, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ–≤ –±–æ—Ç–∞ —É {SUPPORT_CHAT}")

# –ö–æ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –Ω—è—à–æ–∫ –∑ –±–æ—Ç–∞
async def delete(update: Update, context: CallbackContext) -> None:
    if str(update.effective_user.id) not in sudo_users:
        await update.message.reply_text(f"‚ö†Ô∏è –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –æ–¥–Ω–æ–≥–æ –∑ –∞–¥–º—ñ–Ω—ñ–≤ –±–æ—Ç–∞ —É {SUPPORT_CHAT}, —â–æ–±–∏ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –∫–∞—Ä—Ç–∏–Ω–∫—É.")
        return

    try:
        args = context.args
        if len(args) != 1:
            await update.message.reply_text("‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç! –§–æ—Ä–º–∞—Ç: <code>/delete</code> <i>ID</i>")
            return
        
        character = await collection.find_one_and_delete({'id': args[0]})

        if character:
            
            await context.bot.delete_message(chat_id = CHARA_CHANNEL_ID, message_id = character['message_id'])
            await update.message.reply_text("‚úÖ –ì–û–¢–û–í–û")
        else:
            await update.message.reply_text("‚úÖ –ù—è—à–∫—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö, –∞–ª–µ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª—ñ.")
    except Exception as e:
        await update.message.reply_text(f'{str(e)}')

# –ö–æ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω—è—à–æ–∫ –≤ –±–æ—Ç—ñ
async def update(update: Update, context: CallbackContext) -> None:
    if str(update.effective_user.id) not in sudo_users:
        await update.message.reply_text(f"‚ö†Ô∏è –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –æ–¥–Ω–æ–≥–æ –∑ –∞–¥–º—ñ–Ω—ñ–≤ –±–æ—Ç–∞ —É {SUPPORT_CHAT}, —â–æ–±–∏ –æ–Ω–æ–≤–∏—Ç–∏ —Ü—é –∫–∞—Ä—Ç–∏–Ω–∫—É.")
        return

    try:
        args = context.args
        if len(args) != 3:
            await update.message.reply_text("‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç! –§–æ—Ä–º–∞—Ç: <code>/update</code> <i>id –ø–æ–ª–µ –Ω–æ–≤–µ_–∑–Ω–∞—á–µ–Ω–Ω—è<i>")
            return

        # —à—É–∫–∞—î–º–æ –Ω—è—à–∫—É –∑–∞ ID
        character = await collection.find_one({'id': args[0]})
        if not character:
            await update.message.reply_text("‚ùåÔ∏è –ù—è—à–∫—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
            return

        # –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ–ª–µ –≤–∞–ª—ñ–¥–Ω–µ
        valid_fields = ['img_url', 'name', 'name_translit', 'anime', 'event']
        if args[1] not in valid_fields:
            await update.message.reply_text(f"‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–Ω–µ –ø–æ–ª–µ. –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –æ–¥–Ω–µ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö: {', '.join(valid_fields)}.")
            return

        # –∑–º—ñ–Ω—é—î–º–æ –ø–æ–ª–µ
        if args[1] in ['name', 'name_translit', 'anime']:
            new_value = args[2].replace('-', ' ').title()
       # elif args[1] == 'rarity':
       #     rarity_map = {
       #              1: "‚ö™Ô∏è –ó–≤–∏—á–∞–π–Ω–∞", 
       #              2: "üü£ –†—ñ–¥–∫—ñ—Å–Ω–∞", 
       #              3: "üü° –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞", 
       #              4: "üî¥ –ú—ñ—Ñ—ñ—á–Ω–∞",
       #              5: "üíÆ –û—Å–æ–±–ª–∏–≤–∞"
       #              }
       #     try:
       #         new_value = rarity_map[int(args[2])]
       #     except KeyError:
       #         await update.message.reply_text("""‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ —Ä—ñ–¥–∫—ñ—Å—Ç—å. –û–±–µ—Ä—ñ—Ç—å —Ä—ñ–¥–∫—ñ—Å—Ç—å –∑ –Ω–∏–∂—á–µ–Ω–∞–≤–µ–¥–µ–Ω–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤:
       #                                         1 : ‚ö™Ô∏è –ó–≤–∏—á–∞–π–Ω–∞
       #                                         2 : üü£ –†—ñ–¥–∫—ñ—Å–Ω–∞
       #                                         3 : üü° –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞
       #                                         4 : üî¥ –ú—ñ—Ñ—ñ—á–Ω–∞
       #                                         5 : üíÆ –û—Å–æ–±–ª–∏–≤–∞""")
       #         return
        elif args[1] == 'event':
            event_map =  {
                     1: "üêæ –¢–≤–∞—Ä–∏–Ω–æ–ø–æ–¥—ñ–±–Ω–∞", 
                     2: "üëò –°—Ö—ñ–¥–Ω–∞", 
                     3: "üß® –ó–Ω–∞–º–µ–Ω–Ω–∞", 
                     4: "üê∞ –í–µ–ª–∏–∫–æ–¥–Ω—è",
                     5: "üßëüèª‚Äçü§ù‚Äçüßëüèª –ü–∞—Ä–Ω–∞",
                     6: "üåà –°—Ç–∞—Ç–µ–∑–º—ñ–Ω–Ω–∞",
                     7: "üèñÔ∏è –ü–ª—è–∂–Ω–∞",
                     8: "üßπ –ü–æ–∫–æ—ó–≤–∫–æ–≤–∞",
                     9: "üë©‚Äçüè´ –®–∫—ñ–ª—å–Ω–∞",
                     10: "üéÉ –ì–µ–ª–æ–≤—ñ–Ω—Å—å–∫–∞",
                     11: "üçî –ì–∞–º–±—É—Ä–≥–µ—Ä–Ω–∞",
                     12: "üéÑ –†—ñ–∑–¥–≤—è–Ω–∞",
                     13: "–ó–≤–∏—á–∞–π–Ω–∞"
                     }
            try:
                new_value = event_map[int(args[2])]
            except KeyError:
                await update.message.reply_text("""‚ùåÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –ø–æ–¥—ñ—è. –í–∫–∞–∂—ñ—Ç—å –ø–æ–¥—ñ—é, –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –º—ñ—Å—è—Ü—è:
                                                1 (—Å—ñ—á–µ–Ω—å): üêæ –¢–≤–∞—Ä–∏–Ω–æ–ø–æ–¥—ñ–±–Ω–∞
                                                2 (–ª—é—Ç–∏–π): üëò –°—Ö—ñ–¥–Ω–∞
                                                3 (–±–µ—Ä–µ–∑–µ–Ω—å): üß® –ó–Ω–∞–º–µ–Ω–Ω–∞
                                                4 (–∫–≤—ñ—Ç–µ–Ω—å): üê∞ –í–µ–ª–∏–∫–æ–¥–Ω—è
                                                5 (—Ç—Ä–∞–≤–µ–Ω—å): üßëüèª‚Äçü§ù‚Äçüßëüèª –ü–∞—Ä–Ω–∞
                                                6 (—á–µ—Ä–≤–µ–Ω—å): üåà –ü—Ä–æ—Ç–∏–ª–µ–∂–Ω–∞
                                                7 (–ª–∏–ø–µ–Ω—å): üèñÔ∏è –ü–ª—è–∂–Ω–∞
                                                8 (—Å–µ—Ä–ø–µ–Ω—å): üßπ –ü–æ–∫–æ—ó–≤–∫–æ–≤–∞
                                                9 (–≤–µ—Ä–µ—Å–µ–Ω—å): üë©‚Äçüè´ –®–∫—ñ–ª—å–Ω–∞
                                                10 (–∂–æ–≤—Ç–µ–Ω—å): üéÉ –ì–µ–ª–æ–≤—ñ–Ω—Å—å–∫–∞
                                                11 (–ª–∏—Å—Ç–æ–ø–∞–¥): üçî –ì–∞–º–±—É—Ä–≥–µ—Ä–Ω–∞
                                                12 (–≥—Ä—É–¥–µ–Ω—å): üéÑ –†—ñ–∑–¥–≤—è–Ω–∞
                                                13 : –ó–≤–∏—á–∞–π–Ω–∞""")
                return
        else:
            new_value = args[2]

        await collection.find_one_and_update({'id': args[0]}, {'$set': {args[1]: new_value}})

# –í–∏–≤–µ–¥–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª –•–∞–ø–∞–π–∫–∏
        # —è–∫—â–æ –º—ñ–Ω—è—î—Ç—å—Å—è –∫–∞—Ä—Ç–∏–Ω–∫–∞
        if args[1] == 'img_url':
            await context.bot.delete_message(chat_id = CHARA_CHANNEL_ID, message_id = character['message_id'])
            message = await context.bot.send_photo(
                chat_id = CHARA_CHANNEL_ID,
                photo = new_value,
                caption = f"<b>–ù—è—à–∫–∞:</b> {character_name} - {id}\n<b>–¢—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—è —ñ–º–µ–Ω—ñ:</b> {character_name_translit}\n<b>–¢–∞–π—Ç–ª:</b> {anime}\n<b>–ü–æ–¥—ñ—è:</b> {event}\n\n–û–Ω–æ–≤–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º <a href='tg://user?id={update.effective_user.id}'>{update.effective_user.first_name}</a>",
                parse_mode = 'HTML'
            )
            character['message_id'] = message.message_id
            await collection.find_one_and_update({'id': args[0]}, {'$set': {'message_id': message.message_id}})
        # —è–∫—â–æ –º—ñ–Ω—è—î—Ç—å—Å—è —â–æ—Å—å —ñ–Ω—à–µ
        else:           
            await context.bot.edit_message_caption(
                chat_id = CHARA_CHANNEL_ID,
                message_id = character['message_id'],
                caption = f"<b>–ù—è—à–∫–∞:</b> {character_name} - {id}\n<b>–¢—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—è —ñ–º–µ–Ω—ñ:</b> {character_name_translit}\n<b>–¢–∞–π—Ç–ª:</b> {anime}\n<b>–ü–æ–¥—ñ—è:</b> {event}\n\n–û–Ω–æ–≤–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º <a href='tg://user?id={update.effective_user.id}'>{update.effective_user.first_name}</a>",
                parse_mode = 'HTML'
            )

        await update.message.reply_text("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö. –û–¥–Ω–∞–∫ —ñ–Ω–æ–¥—ñ –ø–æ—Ç—Ä—ñ–±–µ–Ω —á–∞—Å, —â–æ–±–∏ –æ–Ω–æ–≤–∏—Ç–∏ –æ–ø–∏—Å —É –≤–∞—à–æ–º—É —á–∞—Ç—ñ, —Ç–æ–º—É –∑–∞—á–µ–∫–∞–π—Ç–µ.")
    except Exception as e:
        await update.message.reply_text(f"‚ùåÔ∏è –°—Ö–æ–∂–µ, –±–æ—Ç–∞ –Ω–µ –¥–æ–¥–∞–Ω–æ –¥–æ —á–∞—Ç—É, –∞–±–æ —Ç–∞–∫–æ—ó –Ω—è—à–∫–∏ –Ω–µ —ñ—Å–Ω—É—î, –∞–±–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π id –Ω—è—à–∫–∏.")

UPLOAD_HANDLER = CommandHandler('upload', upload, block = False)
application.add_handler(UPLOAD_HANDLER)
DELETE_HANDLER = CommandHandler('delete', delete, block = False)
application.add_handler(DELETE_HANDLER)
UPDATE_HANDLER = CommandHandler('update', update, block=False)
application.add_handler(UPDATE_HANDLER)

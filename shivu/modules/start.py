import random
from html import escape 

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackContext, CallbackQueryHandler, CommandHandler

from shivu import application, PHOTO_URL, BOT_USERNAME, db
from shivu import pm_users as collection 

async def start(update: Update, context: CallbackContext) -> None:
    user_id = update.effective_user.id
    first_name = update.effective_user.first_name
    username = update.effective_user.username

    user_data = await collection.find_one({"_id": user_id})

    if user_data is None:        
        await collection.insert_one({"_id": user_id, "first_name": first_name, "username": username})   
            else:    
        if user_data['first_name'] != first_name or user_data['username'] != username: 
            await collection.update_one({"_id": user_id}, {"$set": {"first_name": first_name, "username": username}})

    if update.effective_chat.type == "private":   
        caption = f"""***–ü—Ä–∏–≤—ñ—Ç!***

                        ***–Ø - –±–æ—Ç –¥–ª—è –≤—ñ–¥–ª–æ–≤—É —Ä—ñ–∑–Ω–∏—Ö –Ω—è—à–æ–∫! ‚Äã–î–æ–¥–∞—Å–∏ –º–µ–Ω–µ —É —Å–≤—ñ–π —á–∞—Ç, —ñ —è –Ω–∞–¥—Å–∏–ª–∞—Ç–∏–º—É —Ä—ñ–∑–Ω–∏—Ö –Ω—è—à–æ–∫ –∫–æ–∂–Ω—ñ 100 (–∞–±–æ –±—ñ–ª—å—à–µ - —Ü–µ –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏!) –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å, —ñ –≤—ñ–¥–≥–∞–¥–∞–≤—à–∏ –Ω—è—à–∫—É, —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à —ó—ó –¥–æ —Å–≤–æ–≥–æ –≥–∞—Ä–µ–º—É. –ù–µ –±–∞—Ä–∏—Å—è - –¥–æ–¥–∞–≤–∞–π –¥–æ —Å–≤–æ–≥–æ —á–∞—Ç—É —ñ –ø–æ—á–∏–Ω–∞–π –∑–±–∏—Ä–∞—Ç–∏ –≤–ª–∞—Å–Ω–∏–π –≥–∞—Ä–µ–º!***"""
        
        keyboard = [
            [InlineKeyboardButton("–î–û–î–ê–¢–ò –î–û –ß–ê–¢–£", url = f'http://t.me/{BOT_USERNAME}?startgroup=new')],
            [InlineKeyboardButton("–ö–û–ú–ê–ù–î–ò –ë–û–¢–ê", callback_data = 'help')],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        photo_url = random.choice(PHOTO_URL)

        await context.bot.send_photo(chat_id=update.effective_chat.id, photo = photo_url, caption = caption, reply_markup = reply_markup, parse_mode = 'markdown')

    else:
        photo_url = random.choice(PHOTO_URL)
        keyboard = [
            [InlineKeyboardButton("–î–û–î–ê–¢–ò –î–û –ß–ê–¢–£", url = f'http://t.me/{BOT_USERNAME}?startgroup=new')],
            [InlineKeyboardButton("–ö–û–ú–ê–ù–î–ò –ë–û–¢–ê", callback_data = 'help')],
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_photo(chat_id = update.effective_chat.id, photo = photo_url, caption = "üé¥–ù–∞ –º—ñ—Å—Ü—ñ!?\n–ë—ñ–ª—å—à–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è - —É –ü–ü!", reply_markup = reply_markup )

async def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    if query.data == 'help':
        help_text = """***–ö–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞:***
    
                        ***/guess - –≤—ñ–¥–≥–∞–¥–∞—Ç–∏ –Ω—è—à–∫—É (–ø—Ä–∞—Ü—é—î –ª–∏—à–µ –≤ —á–∞—Ç—ñ)***
                        ***/fav - –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω—è—à–∫—É —è–∫ —É–ª—é–±–ª–µ–Ω—É***
                        ***/trade - –æ–±–º—ñ–Ω—è—Ç–∏—Å—è –Ω—è—à–∫–∞–º–∏ (–ø—Ä–∞—Ü—é—î –ª–∏—à–µ –≤ —á–∞—Ç—ñ)***
                        ***/collection - –≥–ª—è–Ω—É—Ç–∏ —Å–≤—ñ–π –≥–∞—Ä–µ–º***
                        ***/ctop - –≥–ª—è–Ω—É—Ç–∏ —Ç–æ–ø —á–∞—Ç—É –∑–∞ –∫-—Å—Ç—é –Ω—è—à–æ–∫***
                        ***/changetime - –∑–º—ñ–Ω–∏—Ç–∏ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—ñ—Å—Ç—å –ø–æ—è–≤–∏ –Ω—è—à–æ–∫ (–ø—Ä–∞—Ü—é—î –ª–∏—à–µ –≤ —á–∞—Ç—ñ)***"""
        help_keyboard = [[InlineKeyboardButton("‚§æ –ù–∞–∑–∞–¥", callback_data='back')]]
        reply_markup = InlineKeyboardMarkup(help_keyboard)
        
        await context.bot.edit_message_caption(chat_id = update.effective_chat.id, message_id = query.message.message_id, caption = help_text, reply_markup = reply_markup, parse_mode = 'markdown')

    elif query.data == 'back':
        caption = f"""***–ü—Ä–∏–≤—ñ—Ç!***

                        ***–Ø - –±–æ—Ç –¥–ª—è –≤—ñ–¥–ª–æ–≤—É —Ä—ñ–∑–Ω–∏—Ö –Ω—è—à–æ–∫! ‚Äã–î–æ–¥–∞—Å–∏ –º–µ–Ω–µ —É —Å–≤—ñ–π —á–∞—Ç, —ñ —è –Ω–∞–¥—Å–∏–ª–∞—Ç–∏–º—É —Ä—ñ–∑–Ω–∏—Ö –Ω—è—à–æ–∫ –∫–æ–∂–Ω—ñ 100 (–∞–±–æ –±—ñ–ª—å—à–µ - —Ü–µ –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏!) –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å, —ñ –≤—ñ–¥–≥–∞–¥–∞–≤—à–∏ –Ω—è—à–∫—É, —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à —ó—ó –¥–æ —Å–≤–æ–≥–æ –≥–∞—Ä–µ–º—É. –ù–µ –±–∞—Ä–∏—Å—è - –¥–æ–¥–∞–≤–∞–π –¥–æ —Å–≤–æ–≥–æ —á–∞—Ç—É —ñ –ø–æ—á–∏–Ω–∞–π –∑–±–∏—Ä–∞—Ç–∏ –≤–ª–∞—Å–Ω–∏–π –≥–∞—Ä–µ–º!***"""
    
        keyboard = [
            [InlineKeyboardButton("–î–û–î–ê–¢–ò –î–û –ß–ê–¢–£", url = f'http://t.me/{BOT_USERNAME}?startgroup=new')],
            [InlineKeyboardButton("–ö–û–ú–ê–ù–î–ò –ë–û–¢–ê", callback_data = 'help')],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await context.bot.edit_message_caption(chat_id = update.effective_chat.id, message_id = query.message.message_id, caption = caption, reply_markup = reply_markup, parse_mode = 'markdown')

application.add_handler(CallbackQueryHandler(button, pattern='^help$|^back$', block=False))
start_handler = CommandHandler('start', start, block=False)
application.add_handler(start_handler)
